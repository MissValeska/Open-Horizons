.TH "Open-Horizons/DriverSelectionConfiguration.cpp" 3 "Fri Mar 7 2014" "Version 0.0.1.1" "Open Horizons" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Open-Horizons/DriverSelectionConfiguration.cpp \- 
.SH SYNOPSIS
.br
.PP
\fC#include <cstdlib>\fP
.br
\fC#include <limits>\fP
.br
\fC#include <ctype\&.h>\fP
.br
\fC#include <functional>\fP
.br
\fC#include <irrlicht/irrlicht\&.h>\fP
.br
\fC#include 'bimap\&.hpp'\fP
.br
\fC#include 'inisetup\&.hpp'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBfatal\fP (const char *error, int exit_code)"
.br
.ti -1c
.RI "void \fBPlay_Now\fP ()"
.br
.ti -1c
.RI "void \fBAdvanced_Options\fP ()"
.br
.ti -1c
.RI "void \fBMulitplayerInfo\fP ()"
.br
.ti -1c
.RI "void \fBdisplay_software_select\fP ()"
.br
.ti -1c
.RI "void \fBoptional_config\fP ()"
.br
.ti -1c
.RI "void \fBoptions_select\fP ()"
.br
.RI "\fIDRIVERCHOICE_HPP_INCLUDED\&. \fP"
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "char \fBchoose_switch_stuff\fP"
.br
.ti -1c
.RI "int \fBcolour_bits\fP = 32"
.br
.ti -1c
.RI "bool \fBfullscreen_define\fP = false"
.br
.ti -1c
.RI "bool \fBshadows_define\fP = true"
.br
.ti -1c
.RI "bool \fBvsync_define\fP = false"
.br
.ti -1c
.RI "int \fBscreen_width\fP"
.br
.ti -1c
.RI "int \fBscreen_height\fP"
.br
.ti -1c
.RI "std::string \fBipaddress\fP"
.br
.ti -1c
.RI "int \fBportnumber\fP"
.br
.ti -1c
.RI "irr::video::E_DRIVER_TYPE \fBdisplay_software\fP"
.br
.ti -1c
.RI "std::string \fBdisplay_software_string\fP"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "void Advanced_Options ()"
< Save the advanced configuration\&. 
.PP
Definition at line 66 of file DriverSelectionConfiguration\&.cpp\&.
.SS "void display_software_select ()"
<This is connected to the while statement a bit later\&.
.PP
< Save the standard configuration\&. 
.PP
Definition at line 141 of file DriverSelectionConfiguration\&.cpp\&.
.SS "void fatal (const char *error, intexit_code)"

.PP
Definition at line 36 of file DriverSelectionConfiguration\&.cpp\&.
.SS "void MulitplayerInfo ()"

.PP
Definition at line 124 of file DriverSelectionConfiguration\&.cpp\&.
.SS "void optional_config ()"
< this gets back the value from the config file and saves to a variable 
.PP
Definition at line 248 of file DriverSelectionConfiguration\&.cpp\&.
.SS "void options_select ()"

.PP
DRIVERCHOICE_HPP_INCLUDED\&. 
.PP
Definition at line 271 of file DriverSelectionConfiguration\&.cpp\&.
.SS "void Play_Now ()"

.PP
Definition at line 42 of file DriverSelectionConfiguration\&.cpp\&.
.SH "Variable Documentation"
.PP 
.SS "char choose_switch_stuff"

.PP
Definition at line 15 of file DriverSelectionConfiguration\&.cpp\&.
.SS "int colour_bits = 32"

.PP
Definition at line 17 of file DriverSelectionConfiguration\&.cpp\&.
.SS "irr::video::E_DRIVER_TYPE display_software"
This defines a string basically (It's probably not technically a string) Which I can name what ever I want, And is compatible with defining the renderer\&. This prevents me from needing to set up multiple nearly identical functions, Or, Worse, Some kind of complicated go to this function, run this, then return, and please don't fail\&. 
.PP
Definition at line 29 of file DriverSelectionConfiguration\&.cpp\&.
.SS "std::string display_software_string"

.PP
Definition at line 34 of file DriverSelectionConfiguration\&.cpp\&.
.SS "bool fullscreen_define = false"

.PP
Definition at line 18 of file DriverSelectionConfiguration\&.cpp\&.
.SS "std::string ipaddress"

.PP
Definition at line 25 of file DriverSelectionConfiguration\&.cpp\&.
.SS "int portnumber"

.PP
Definition at line 27 of file DriverSelectionConfiguration\&.cpp\&.
.SS "int screen_height"

.PP
Definition at line 23 of file DriverSelectionConfiguration\&.cpp\&.
.SS "int screen_width"

.PP
Definition at line 22 of file DriverSelectionConfiguration\&.cpp\&.
.SS "bool shadows_define = true"

.PP
Definition at line 19 of file DriverSelectionConfiguration\&.cpp\&.
.SS "bool vsync_define = false"

.PP
Definition at line 20 of file DriverSelectionConfiguration\&.cpp\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for Open Horizons from the source code\&.
